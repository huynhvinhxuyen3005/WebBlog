import { useEffect, useState } from "react";
import { Button, Form, Input, Typography, Card, Avatar, Space, Divider, Row, Col, Tag, message, notification } from "antd";
import { UserOutlined, SaveOutlined, EditOutlined, DeleteOutlined, PlusOutlined, LikeOutlined, MessageOutlined } from "@ant-design/icons";
import axios from "axios";
import "../style/Home.css";
import {useNavigate} from "react-router-dom";
import moment from "moment";

const { Title, Text } = Typography;

export default function Profile({ currentUser, setCurrentUser }) {
    const [form] = Form.useForm();
    const [loading, setLoading] = useState(false);
    const [userPosts, setUserPosts] = useState([]);
    const [postsLoading, setPostsLoading] = useState(false);
    const navigate = useNavigate();
    useEffect(() => {
        if (currentUser) {
            form.setFieldsValue({
                name: currentUser.name || "",
                username: currentUser.username || "",
                password: "",
            });
            fetchUserPosts();
        }
    }, [currentUser, form]);

    const fetchUserPosts = () => {
        setPostsLoading(true);
        axios.get(`http://localhost:9999/posts?authorId=${currentUser.id}&_sort=createdAt&_order=desc`)
            .then(res => setUserPosts(res.data))
            .catch(err => {
                console.error(err);
                message.error('L·ªói khi t·∫£i b√†i vi·∫øt!');
            })
            .finally(() => setPostsLoading(false));
    };

    const handleUpdate = async (values) => {
        setLoading(true);
        try {
            const updateData = {
                name: values.name,
                username: values.username,
            };
            if (values.password) {
                updateData.password = values.password;
            }

            await axios.put(`http://localhost:9999/users/${currentUser.id}`, { ...currentUser, ...updateData });
            
            const updatedUser = { ...currentUser, ...updateData };
            localStorage.setItem("user", JSON.stringify(updatedUser));
            setCurrentUser(updatedUser);
            notification.success({
                message: "‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!",
                description: "Th√¥ng tin c√° nh√¢n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.",
                duration: 3
            });
            form.setFieldsValue({ password: "" }); // Reset password field
        } catch (error) {
            message.error("C·∫≠p nh·∫≠t th·∫•t b·∫°i! Vui l√≤ng th·ª≠ l·∫°i.");
        } finally {
            setLoading(false);
        }
    };

    const handleDeletePost = (postId) => {
        if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i vi·∫øt n√†y?")) {
            axios.delete(`http://localhost:9999/posts/${postId}`)
                .then(() => {
                    notification.success({
                        message: "üóëÔ∏è ƒê√£ x√≥a b√†i vi·∫øt!",
                        description: "B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi h·ªá th·ªëng.",
                        duration: 3
                    });
                    fetchUserPosts();
                })
                .catch(() => {
                    message.error('L·ªói khi x√≥a b√†i vi·∫øt!');
                });
        }
    };

    return (
        <div className="profile-container">
            <Row gutter={[24, 24]}>
                <Col xs={24} lg={8}>
                    <Card style={{ borderRadius: '12px', boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }}>
                        <div style={{ textAlign: 'center', marginBottom: 24 }}>
                            <Avatar 
                                size={80} 
                                icon={<UserOutlined />} 
                                style={{ 
                                    marginBottom: 16,
                                    background: currentUser?.role === 'admin' ? '#ff4d4f' : '#1890ff',
                                    border: '3px solid #fff',
                                    boxShadow: '0 2px 8px rgba(0,0,0,0.15)'
                                }} 
                            />
                            <Title level={3} style={{ marginBottom: 8 }}>
                                {currentUser?.name}
                            </Title>
                            <Space direction="vertical" size="small">
                                <Text type="secondary">@{currentUser?.username}</Text>
                                <Tag color={currentUser?.role === 'admin' ? 'red' : 'blue'} style={{ fontSize: '12px' }}>
                                    {currentUser?.role === 'admin' ? 'üëë Qu·∫£n tr·ªã vi√™n' : 'üë§ Ng∆∞·ªùi d√πng'}
                                </Tag>
                            </Space>
                        </div>

                <Form
                    form={form}
                    layout="vertical"
                    onFinish={handleUpdate}
                    initialValues={{
                        name: currentUser?.name || "",
                        username: currentUser?.username || "",
                        password: "",
                    }}
                >
                    <Form.Item
                        label="H·ªç v√† t√™n"
                        name="name"
                        rules={[
                            { required: true, message: "Vui l√≤ng nh·∫≠p h·ªç v√† t√™n!" },
                            { min: 2, message: "H·ªç v√† t√™n ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±!" }
                        ]}
                    >
                        <Input placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n" />
                    </Form.Item>

                    <Form.Item
                        label="T√™n ƒëƒÉng nh·∫≠p"
                        name="username"
                        rules={[
                            { required: true, message: "Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p!" },
                            { min: 3, message: "T√™n ƒëƒÉng nh·∫≠p ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±!" }
                        ]}
                    >
                        <Input placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p" />
                    </Form.Item>

                    <Form.Item
                        label="M·∫≠t kh·∫©u m·ªõi"
                        name="password"
                        rules={[
                            { min: 6, message: "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!" }
                        ]}
                    >
                        <Input.Password placeholder="ƒê·ªÉ tr·ªëng n·∫øu kh√¥ng mu·ªën thay ƒë·ªïi m·∫≠t kh·∫©u" />
                    </Form.Item>

                    <Divider />

                        <Form.Item>
                            <Button 
                                type="primary" 
                                htmlType="submit" 
                                loading={loading}
                                icon={<SaveOutlined />}
                                block
                                size="large"
                                style={{ borderRadius: '8px' }}
                            >
                                C·∫≠p nh·∫≠t th√¥ng tin
                            </Button>
                        </Form.Item>
                    </Form>
                </Card>
            </Col>

            <Col xs={24} lg={16}>
                <Card 
                    title={
                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                            <span>üìù B√†i vi·∫øt c·ªßa t√¥i ({userPosts.length})</span>
                            <Button 
                                type="primary" 
                                icon={<PlusOutlined />}
                                onClick={() => navigate('/create')}
                                style={{ borderRadius: '8px' }}
                            >
                                T·∫°o b√†i m·ªõi
                            </Button>
                        </div>
                    }
                    style={{ borderRadius: '12px', boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }}
                    loading={postsLoading}
                >
                    {userPosts.length === 0 ? (
                        <div style={{ 
                            textAlign: 'center', 
                            padding: '40px 20px',
                            background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',
                            borderRadius: '12px',
                            margin: '20px 0'
                        }}>
                            <div style={{ fontSize: '48px', marginBottom: '16px' }}>üìù</div>
                            <Text type="secondary" style={{ fontSize: '16px', display: 'block', marginBottom: '16px' }}>
                                B·∫°n ch∆∞a c√≥ b√†i vi·∫øt n√†o
                            </Text>
                            <Button 
                                type="primary" 
                                icon={<PlusOutlined />}
                                onClick={() => navigate('/create')}
                                size="large"
                                style={{ borderRadius: '8px' }}
                            >
                                T·∫°o b√†i vi·∫øt ƒë·∫ßu ti√™n
                            </Button>
                        </div>
                    ) : (
                        <Row gutter={[16, 16]}>
                            {userPosts.map(post => (
                                <Col xs={24} key={post.id}>
                                    <Card
                                        hoverable
                                        style={{ borderRadius: '8px', border: '1px solid #f0f0f0' }}
                                        actions={[
                                            <Button
                                                key="view"
                                                type="text"
                                                onClick={() => navigate(`/post/${post.id}`)}
                                                style={{ color: '#1890ff' }}
                                            >
                                                üëÅÔ∏è Xem
                                            </Button>,
                                            <Button
                                                key="edit"
                                                type="text"
                                                icon={<EditOutlined />}
                                                onClick={() => navigate(`/edit/${post.id}`)}
                                                style={{ color: '#52c41a' }}
                                            >
                                                S·ª≠a
                                            </Button>,
                                            <Button
                                                key="delete"
                                                type="text"
                                                danger
                                                icon={<DeleteOutlined />}
                                                onClick={() => handleDeletePost(post.id)}
                                            >
                                                X√≥a
                                            </Button>
                                        ]}
                                    >
                                        <div>
                                            <div style={{ 
                                                display: 'flex', 
                                                justifyContent: 'space-between', 
                                                alignItems: 'flex-start',
                                                marginBottom: '12px'
                                            }}>
                                                <Title level={4} style={{ margin: 0, color: '#1890ff' }}>
                                                    {post.title}
                                                </Title>
                                                <Tag color={post.visibility === 'public' ? 'green' : 'orange'} size="small">
                                                    {post.visibility === 'public' ? 'üåç C√¥ng khai' : 'üîê Ri√™ng t∆∞'}
                                                </Tag>
                                            </div>
                                            
                                            <Text ellipsis style={{ 
                                                display: 'block', 
                                                marginBottom: '12px',
                                                lineHeight: 1.6,
                                                color: '#666'
                                            }}>
                                                {post.content.replace(/<[^>]+>/g, "").slice(0, 150)}...
                                            </Text>
                                            
                                            <div style={{ 
                                                display: 'flex', 
                                                justifyContent: 'space-between', 
                                                alignItems: 'center' 
                                            }}>
                                                <Space size="small">
                                                    <Text type="secondary" style={{ fontSize: '12px' }}>
                                                        üëç {post.likesCount || 0} likes
                                                    </Text>
                                                    <Text type="secondary" style={{ fontSize: '12px' }}>
                                                        üí¨ {post.commentsCount || 0} b√¨nh lu·∫≠n
                                                    </Text>
                                                </Space>
                                                <Text type="secondary" style={{ fontSize: '12px' }}>
                                                    üìÖ {moment(post.createdAt).format('DD/MM/YYYY')}
                                                </Text>
                                            </div>
                                        </div>
                                    </Card>
                                </Col>
                            ))}
                        </Row>
                    )}
                </Card>
            </Col>
        </Row>
    </div>
    );
}
